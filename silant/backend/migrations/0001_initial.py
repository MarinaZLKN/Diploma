# Generated by Django 4.2.3 on 2023-07-05 13:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ControlledBridgeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DrivingBridgeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EngineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FailureNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_factory_number', models.CharField(max_length=4)),
                ('engine_factory_number', models.CharField(max_length=100)),
                ('transmission_factory_number', models.CharField(max_length=100)),
                ('driving_bridge_factory_number', models.CharField(max_length=100)),
                ('controlled_bridge_factory_number', models.CharField(max_length=100)),
                ('delivery_contract', models.CharField(max_length=100)),
                ('shipment_date', models.DateField()),
                ('consignee', models.CharField(max_length=100)),
                ('delivery_address', models.CharField(max_length=100)),
                ('equipment', models.CharField(max_length=100)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.client')),
                ('controlled_bridge_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.controlledbridgemodel')),
                ('driving_bridge_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.drivingbridgemodel')),
                ('engine_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.enginemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TransmissionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_maintenance', models.DateField()),
                ('operating_time', models.IntegerField()),
                ('order_number', models.CharField(max_length=100)),
                ('data_of_order', models.DateField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.machine')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.organization')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.servicecompany')),
                ('type_of_maintenance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.typeofmaintenance')),
            ],
        ),
        migrations.AddField(
            model_name='machine',
            name='service_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.servicecompany'),
        ),
        migrations.AddField(
            model_name='machine',
            name='technical_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.technicalmodel'),
        ),
        migrations.AddField(
            model_name='machine',
            name='transmission_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.transmissionmodel'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_failure', models.DateField()),
                ('operating_time', models.IntegerField()),
                ('spare_parts_used', models.TextField(blank=True, default=None, null=True)),
                ('date_of_recovery', models.DateField()),
                ('technical_downtime', models.IntegerField(default=None)),
                ('description_of_failure', models.CharField(max_length=100)),
                ('failure_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.failurenode')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.machine')),
                ('recovery_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.recoverymethod')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.servicecompany')),
            ],
        ),
    ]
